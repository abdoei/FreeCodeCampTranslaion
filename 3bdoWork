# كيف تكتب ملف README.md مناسب لمشروع  GitHub القادم!

أذكر أنه عندما تعرفت أول مرة على GitHub، لم يكن لدي فكرة عن ماهيته ولا عما يمكن له فعله. لا داعي لأن تخبر أحدًا أني قد أنشأت حسابي الخاص على هذه المنصة لأنه قيل لي أنه يجب على كل مطور برمجيات امتلاك حسابٍ خاص عند رفع الكود الخاص به على المنصة.

أغلب الوقت كمبتدئ، لم أفعل شيئًا بحسابي. ولكن بعد ذلك، بسبب شغفي بالتكنولوجيا، بدأت في متابعة مطورين آخرين والتحقق من عملهم على GitHub، وقد لاحظت شيئًا مشتركًا بينهم: لقد كان لديهم جميعًا مشاريع رائعة وساهموا في مشاريع مفتوحة المصدر، لكن مشاريعهم كانت تحتوي أيضًا على ملفات **README**  مفصلة جيدًا.

ونتيجة لذلك، نما اهتمامي بمعرفة ماهية ملفات README ، وقد قررت محاولة إضافة ملفًا من هذا النوع في مشاريعي أيضًا. لن أكذب - فقد فعلت ذلك على عجل دون أي معرفة بكيفية القيام بذلك. وبصراحة لم يكن الأمر رائعًا على الإطلاق! أدعوك لرؤية  [ملفي الأول.](https://github.com/larymak/ToDo-list-App/tree/v1.0) 

ولم أتطور لفترة من الزمن بخصوص طريقة كتابة الملف. ولكن من خلال الممارسة والتعلم المستمر، تمكنت من التطور إلى طريقة توثيق أفضل مثل [هذا الملف](https://github.com/larymak/Python-project-Scripts)، مما أدى إلى تحسين المساهمة في المشروع وساعد المطورين الآخرين على سرعة فهم المشروع والدخول في مرحلة المشاركة في بناء المشروع.

من المهم أيضًا ملاحظة أن ملف README الجيد سيساعدك على التميز عن مجموعة كبيرة من المطورين الذين يضعون عملهم على GitHub.

في هذه المقالة، سوف نتعلم المزيد حول ماهية ملف README وكيفية كتابته. لكن أولاً ، دعنا نفهم ما نعنيه بملف README.

## ما هو ملف README (بمعني "ملف تمهيدي"، والمعنى الحرفي "اقرأني")؟

ببساطة يمكننا وصف ملف README كدليل يمنح المستخدمين وصفًا تفصيليًا للمشروع الذي تعمل عليه.

يمكن أيضًا وصفه بأنه نوع من التوثيق مع إرشادات حول كيفية استخدام المشروع. عادةً ما تحتوي على إرشادات حول كيفية تثبيت المشروع وتشغيله.

من الضروري لك كمطور أن تعرف كيفية توثيق مشروعك عن طريق كتابة ملف README للأسباب التالية:

- هو أول ملف يراه الشخص عندما يتصفح مشروعك، لذا يجب أن يكون موجزًا إلى حد ما ولكنه مفصل أيضًا.
- سيجعل مشروعك متميزًا عن الآخرين. تأكد أيضًا من أن يكون مشروعك جيدًا أيضًا.
- سيساعدك على التركيز على ما يجب على مشروعك إنجازه وكيفية إنجازه.
- ستعمل على تحسين مهاراتك في الكتابة.

	أثناء العمل في مشروع ما، ضع في اعتبارك أنك ستحتاج أن تجعل المطورين الآخرين **يفهمون** الكود الخاص بك وما يفعله الكود. لذا فإن إرفاقه بدليل إضافي (الملف التعريفي) سيكون مفيدًا جدًا.

وعلى سبيل المثال، المثال الذي قمت بضربه سابقًا عن [مشروعي الأول](https://github.com/larymak/ToDo-list-App/tree/v1.0) على GitHub  لا يحتوي على ملف README جيد. وعلى الرغم من أن المشروع كان مذهلاً، فقد كان من الصعب على المبتدئين أن يفهموا بالضبط ماذا يفعل الكود عندما قاموا باستنساخ مستودع الكود (Repository) الخاص بي. من يدري ربما كان من الممكن أن يكون فيروساً مشفرًا، أمزح بالتأكيد!

كالعادة مشروعٌ مثل هذا على GitHub، بغض النظر عن مدى روعته، لن يكونَ المطوِرُون الآخرون متحمسين للعمل عليه ومحاولة اكتشافه بدون قراءة جيدة.

الآن، لتلقي نظرة على هذا [المشروع](https://github.com/larymak/Html-Css-Recap). بالطبع أنت قادر على فهم ما يفعله المشروع، وما يستلزمه، وكيفية البدء إذا كنت بحاجة إلى استخدام المشروع أو تريد المساهمة فيه (Contribution).

كما ترى في المشروع السابق، هذا هو مدى قوة README المكتوب جيدًا وكيف يمكن أن يغير مشروعك. لذا ، دعنا نبدأ في كيفية كتابة ملف README الإحترافي الخاص بك.

## كيف نكتب ملف README خطوة بخطوة!

من المهم جدًا معرفة أنه لا توجد طريقة صحيحة واحدة فقط لبناء ملف RM جيد. ولكن الطريقة الأسوء على الإطلاق هي عدم تضمين التمهيدي من الأساس.

من خلال البحث ودراسة ملفات README المختلفة، هناك بالتأكيد بعض أفضل الممارسات (best practices) التي وجدتها. وهذا ما سأشاركه. كما أقول لنفسي عادة:

> كل يوم هو يوم مخصص للتعلم.

لذلك كلما تقدمت وتطورت في حياتك المهنية، ستُطَور أفكارك الخاصة حول ما الذي يجعل ملف RM الجيد جيدًا وكيفية تحسينه. ربما ستخرج لنا بطريقتك الفريدة!

قبل أن نبدأ، من المهم أيضًا ملاحظة أنه عند كتابة ملف README لمشروعك، يجب أن يكون محتوى الملف قادرًا على الإجابة على ثلاث أسئلة: **ماذا** و **لماذا** و **كيف**.

فيما يلي بعض الأسئلة الإرشادية التي ستساعدك أثناء كتابة الملف:
- ماذا كان دافعك (الحافز)؟
- لماذا بنيت هذا المشروع (السبب)؟
- ما المشكلة التي يعالجها المشروع (المشكلة)؟
- ماذا تعلمت (المردود)؟
- ما الذي يميز مشروعك (التميُّز)؟

إذا كان مشروعك يحتوي على الكثير من الميزات (Features)، ففكر في إضافة قسم "الميزات" وإدراجها فيه.

## ما يجب تضمينه في ملف README؟

### 1. عنوان المشروع
وهو اسم المشروع، ويصف المشروع بالكامل في جملة واحدة، ويساعد الأشخاص على فهم **ما** الهدف الرئيسي من المشروع.

### 2. وصف المشروع
وهو عنصر مهم في مشروعك، غالبًا ما يغفل عنه العديد من المطورين الجدد.

الوصف الخاص بك هو جزء مهم للغاية من مشروعك حيث يسمح لك الوصف الدقيق بإظهار عملك للمطورين الآخرين وكذلك لأصحاب العمل المحتملين بطريقة أكثر تفصيلا من العنوان وأقل تعقيدا من الكود.

غالبًا ما تميز جودة وصف README المشروع الجيد عن المشروع السيئ. الملف المُتقَن هو الذي يستفيد من فرصة الشرح وعرض المشروع بطريقة حسنة لمن يقرأه، وعرض ما يلي:

-   ماذا يفعلُ تطبيقك؟
-   لماذا اخترت هذه التكنولوجيا بالذات لتنفيذ التطبيق؟
-   بعض التحديات التي واجهتك والميزات التي تريد تنفيذها في المستقبل.

### 3. جدول المحتويات (كالفهرس المختصر) (اختياري)
إذا كان ملف README الخاص بمشروعك طويلاً جدًا، فقد ترغب في إضافة جدول للمحتويات لتسهيل انتقال المستخدمين إلى الأقسام المختلفة داخل الملف بسهولة. سيسهل ذلك على القراء التنقل في المشروع بسهولة.
### 4. كيفية تثبيت وتشغيل المشروع
إذا كنت تعمل على مشروع يحتاج المستخدم تثبيته أو تشغيله محليًا في جهاز مثل "جهاز الكاشير" في متاجر التجزئة، فيجب عليك تضمين الخطوات المطلوبة لتثبيت مشروعك وكذلك الملفات والبرامج الأخرى المكملة إن وجدت.

باختصار، قَدِّم وصفًا تفصيليًا لكيفية ضبط وتشغيل بيئة التطوير اللازمة لكي يعمل مشروعك.

### 5. How to Use the Project

Provide instructions and examples so users/contributors can use the project. This will make it easy for them in case they encounter a problem – they will always have a place to reference what is expected.

You can also make use of visual aids by including materials like screenshots to show examples of the running project and also the structure and design principles used in your project.

Also if your project will require authentication like passwords or usernames, this is a good section to include the credentials.

### 6. Include Credits

If you worked on the project as a team or an organization, list your collaborators/team members. You should also include links to their GitHub profiles and social media too.

Also, if you followed tutorials or referenced a certain material that might help the user to build that particular project, include links to those here as well.

This is just a way to show your appreciation and also to help others get a first hand copy of the project.

### 7. Add a License

For most README files, this is usually considered the last part. It lets other developers know what they can and cannot do with your project.

We have different types of licenses depending on the kind of project you are working on. Depending on the one you will choose it will determine the contributions your project gets.

The most common one is the GPL License which allows other to make modification to your code and use it for commercial purposes. If you need help choosing a license, use check out this link: [https://choosealicense.com/](https://choosealicense.com/)

Up to this point what we have covered are the minimum requirements for a good README. But you might also want to consider adding the following sections to make it more eye catching and interactive.

## Additional README Sections

### 8. Badges

Badges aren't necessary, but using them is a simple way of letting other developers know that you know what you're doing.

Having this section can also be helpful to help link to important tools and also show some simple stats about your project like the number of forks, contributors, open issues etc...

Below is a screenshot from one of my projects that shows how you can make use of badges:


The good thing about this section is that it automatically updates it self.

Don't know where to get them from? Check out the badges hosted by [shields.io](https://shields.io/). They have a ton of badges to help you get started. You may not understand what they all represent now, but you will in time.

### 9. How to Contribute to the Project

This mostly will be useful if you are developing an open-source project that you will need other developers to contribute to. You will want to add guidelines to let them know how they can contribute to your project.

Also it is important to make sure that the licence you choose for an open-source projects is correct to avoid future conflicts. And adding contribution guidelines will play a big role.

Some of the most common guidelines include the [Contributor Covenant](https://www.contributor-covenant.org/) and the [Contributing guide](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/setting-guidelines-for-repository-contributors). Thes docs will give you the help you need when setting rules for your project.

### 10. Include Tests

Go the extra mile and write tests for your application. Then provide code examples and how to run them.

This will help show that you are certain and confident that your project will work without any challenges, which will give other people confidence in it, too

### Extra points

Here are a few extra points to note when you're writing your README:

-   Keep it up-to-date - It is a good practise to make sure your file is always up-to-date. In case there are changes make sure to update the file where necessary.
-   Pick a language - We all come from different zones and we all speak different languages. But this does not mean you need to translate your code into vernacular. Writing your README in English will work since English is a globally accepted language. You might want to use a translator tool here if your target audience isn't familiar with English.

## Wrap Up

There you have it, everything you need to improve your README files, or even get you started with writing your first one.

At this point I am confident that you are in a position to add an interactive and inforamative guide to your next project or even an existing one and make your project standout.

There are many tools which you can also use to automatically generate a README for your project, but it's always a good practice to try it on your own before moving to automation. In case you want to check them out, they include:

-   [Make a README](https://www.makeareadme.com/)
-   [README Generator](https://rahuldkjain.github.io/gh-profile-readme-generator/)
-   [README](https://github.com/kefranabg/readme-md-generator)

If you have read this far I really appreciate it. If you enjoyed this article and found it helpful, please share it so you can help another developer improve their projects.

I would love to see your newly crafted README file. Be sure to share a link with me via any of the links below:

Connect With me at [Twitter](https://twitter.com/larymak1) | [YouTube](https://www.youtube.com/channel/UCrT1ARRZfLOuf6nc_97eXEg) | [LinkedIn](https://www.linkedin.com/in/hillary-nyakundi-3a64b11ab/) | [GitHub](https://github.com/larymak)

Do share your valuable opinion, I appreciate your honest feedback!

Enjoy Coding ❤
